version: 2
jobs:
  install:
    docker:
      - image: circleci/node:8-stretch
        environment:
          - NODE_ENV: test
    steps:
      - checkout
      - run:
          name: Set Up CI Environment
          command: |
            git submodule update --init
            ci_scripts/ci_tool.sh --setup_npm
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json"}}
            - dependency-cache-
      - run:
          name: npm install
          command: |
            npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: ./
          paths:
            - .
  publish:
    docker:
      - image: circleci/node:8-stretch
        environment:
          - NODE_ENV: test
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Get CI Scripts
          command: |
            git submodule update --init
            'echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc'
      - run:
          name: npm run build
          command: npm run build
      - run:
          name: Run release
          command: ci_scripts/ci_tool.sh --run_release
      - run:
          name: npm publish
          command: npm publish
  test-schema:
    docker:
      - image: circleci/node:8-stretch
        environment:
          - NODE_ENV: test
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: npm test schema
          command: npm run test:schema
  test:
    docker:
      - image: circleci/node:8-stretch
        environment:
          - NODE_ENV: test
          - MOCHA_OPTS: --reporter mocha-junit-reporter --reporter-options mochaFile=./reports/junit/mocha/mocha.xml
          - ESLINT_OPTS: --quiet --format junit -o ./reports/junit/eslint/eslint.xml
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: npm test
          command: npm test
      - run:
          name: npm run coverage
          command: npm run coverage
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_artifacts:
          path: reports/junit/
          prefix: reports/junit/
      - store_test_results:
          path: reports/junit/

workflows:
  version: 2

  test_and_publish:
    jobs:
      - install
      - test:
          requires:
            - install
      - publish:
          requires:
            - test
